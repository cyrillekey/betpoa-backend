{"version":3,"file":"FixturesController.js","sourceRoot":"/","sources":["controllers/FixturesController.ts"],"names":[],"mappings":";;;;;AACA,kDAAyB;AAGzB,qDAAiD;AAEjD,MAAM,kBAAmB,SAAQ,+BAAc;IAC7C,KAAK,CAAC,cAAc;QAClB,IAAI,CAAC;YACH,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAA4B,CAAA;YAElD,MAAM,KAAK,GAA6B;gBACtC,GAAG,EAAE;oBACH;wBACE,IAAI,EAAE;4BACJ,GAAG,EAAE,IAAA,eAAK,GAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,MAAM,EAAE;yBAC9C;qBACF;iBACF;aACF,CAAA;YACD,IAAI,IAAI,EAAE,QAAQ,EAAE,CAAC;gBACnB,KAAK,CAAC,GAAG,GAAG;oBACV,GAAI,KAAK,CAAC,GAAU;oBACpB;wBACE,IAAI,EAAE;4BACJ,GAAG,EAAE,IAAA,eAAK,EAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,MAAM,EAAE;yBACpC;qBACF;iBACF,CAAA;YACH,CAAC;YACD,IAAI,IAAI,EAAE,MAAM,EAAE,CAAC;gBACjB,KAAK,CAAC,GAAG,GAAG;oBACV,GAAI,KAAK,CAAC,GAAU;oBACpB;wBACE,IAAI,EAAE;4BACJ,GAAG,EAAE,IAAA,eAAK,EAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,MAAM,EAAE;yBACpC;qBACF;iBACF,CAAA;YACH,CAAC;YACD,IAAI,IAAI,EAAE,OAAO;gBACf,KAAK,CAAC,GAAG,GAAG;oBACV,GAAI,KAAK,CAAC,GAAU;oBACpB;wBACE,MAAM,EAAE;4BACN,OAAO,EAAE;gCACP,MAAM,EAAE,IAAI,CAAC,OAAO;gCACpB,IAAI,EAAE,aAAa;6BACpB;yBACF;qBACF;iBACF,CAAA;YACH,IAAI,IAAI,EAAE,MAAM,EAAE,CAAC;gBACjB,KAAK,CAAC,GAAG,GAAG;oBACV,GAAI,KAAK,CAAC,GAAU;oBACpB;wBACE,MAAM,EAAE,IAAI,CAAC,MAAM;qBACpB;iBACF,CAAA;YACH,CAAC;YACD,IAAI,IAAI,EAAE,SAAS,EAAE,CAAC;gBACpB,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;oBACxD,IAAI,CAAC;wBACH,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA;wBACxB,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;4BAClB,OAAO,KAAK,CAAA;wBACd,CAAC;6BAAM,CAAC;4BACN,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;4BAClB,OAAO,KAAK,CAAA;wBACd,CAAC;oBACH,CAAC;oBAAC,OAAO,KAAK,EAAE,CAAC;wBACf,OAAO,KAAK,CAAA;oBACd,CAAC;gBACH,CAAC,EAAE,EAAc,CAAC,CAAA;gBAClB,IAAI,GAAG,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC;oBACpB,KAAK,CAAC,GAAG,GAAG;wBACV,GAAI,KAAK,CAAC,GAAU;wBACpB;4BACE,QAAQ,EAAE;gCACR,EAAE,EAAE,GAAG;6BACR;yBACF;qBACF,CAAA;gBACH,CAAC;YACH,CAAC;YACD,IAAI,IAAI,EAAE,QAAQ,EAAE,CAAC;gBACnB,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;oBACvD,IAAI,CAAC;wBACH,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA;wBACxB,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;4BAClB,OAAO,KAAK,CAAA;wBACd,CAAC;6BAAM,CAAC;4BACN,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;4BAClB,OAAO,KAAK,CAAA;wBACd,CAAC;oBACH,CAAC;oBAAC,OAAO,KAAK,EAAE,CAAC;wBACf,OAAO,KAAK,CAAA;oBACd,CAAC;gBACH,CAAC,EAAE,EAAc,CAAC,CAAA;gBAClB,IAAI,GAAG,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC;oBACpB,KAAK,CAAC,GAAG,GAAG;wBACV,GAAI,KAAK,CAAC,GAAU;wBACpB;4BACE,EAAE,EAAE;gCACF;oCACE,UAAU,EAAE;wCACV,EAAE,EAAE,GAAG;qCACR;iCACF;gCACD;oCACE,UAAU,EAAE;wCACV,EAAE,EAAE,GAAG;qCACR;iCACF;6BACF;yBACF;qBACF,CAAA;gBACH,CAAC;YACH,CAAC;YACD,MAAM,IAAI,GAAW,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;YACjF,MAAM,IAAI,GAAW,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAA;YACnG,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;gBACtD,KAAK,EAAE,KAAK;gBACZ,IAAI;gBACJ,IAAI;gBACJ,OAAO,EAAE;oBACP,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,IAAI;oBACd,MAAM,EAAE,IAAI;oBACZ,MAAM,EAAE,IAAI;iBACb;aACF,CAAC,CAAA;YAEF,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAwB;gBAC1C,EAAE,EAAE,IAAI;gBACR,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE,SAAS;gBAClB,IAAI,EAAE,QAAQ;aACf,CAAC,CAAA;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;YACvC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;YACzB,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAwB;gBACtD,EAAE,EAAE,IAAI;gBACR,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,8CAA8C;gBACvD,IAAI,EAAE,EAAE;aACT,CAAC,CAAA;QACJ,CAAC;IACH,CAAC;IAED,KAAK,CAAC,qBAAqB;QACzB,IAAI,CAAC;YACH,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAA4B,CAAA;YAElD,MAAM,KAAK,GAA6B;gBACtC,GAAG,EAAE;oBACH;wBACE,IAAI,EAAE;4BACJ,IAAI,EAAE,EAAE;yBACT;qBACF;iBACF;aACF,CAAA;YACD,IAAI,IAAI,EAAE,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,EAAE,CAAC;gBAC9C,KAAK,CAAC,GAAG,GAAG;oBACV,GAAI,KAAK,CAAC,GAAU;oBACpB;wBACE,MAAM,EAAE,IAAI,EAAE,MAAM;qBACrB;iBACF,CAAA;YACH,CAAC;iBAAM,CAAC;gBACN,KAAK,CAAC,GAAG,GAAG;oBACV,GAAI,KAAK,CAAC,GAAU;oBACpB;wBACE,IAAI,EAAE;4BACJ,GAAG,EAAE,IAAA,eAAK,GAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,MAAM,EAAE;yBAC9C;qBACF;iBACF,CAAA;YACH,CAAC;YACD,IAAI,IAAI,EAAE,QAAQ,EAAE,CAAC;gBACnB,KAAK,CAAC,GAAG,GAAG;oBACV,GAAI,KAAK,CAAC,GAAU;oBACpB;wBACE,IAAI,EAAE;4BACJ,GAAG,EAAE,IAAA,eAAK,EAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,MAAM,EAAE;yBACpC;qBACF;iBACF,CAAA;YACH,CAAC;YACD,IAAI,IAAI,EAAE,MAAM,EAAE,CAAC;gBACjB,KAAK,CAAC,GAAG,GAAG;oBACV,GAAI,KAAK,CAAC,GAAU;oBACpB;wBACE,IAAI,EAAE;4BACJ,GAAG,EAAE,IAAA,eAAK,EAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,MAAM,EAAE;yBACpC;qBACF;iBACF,CAAA;YACH,CAAC;YACD,IAAI,IAAI,EAAE,OAAO;gBACf,KAAK,CAAC,GAAG,GAAG;oBACV,GAAI,KAAK,CAAC,GAAU;oBACpB;wBACE,MAAM,EAAE;4BACN,OAAO,EAAE;gCACP,MAAM,EAAE,IAAI,CAAC,OAAO;gCACpB,IAAI,EAAE,aAAa;6BACpB;yBACF;qBACF;iBACF,CAAA;YACH,IAAI,IAAI,EAAE,MAAM,EAAE,CAAC;gBACjB,KAAK,CAAC,GAAG,GAAG;oBACV,GAAI,KAAK,CAAC,GAAU;oBACpB;wBACE,MAAM,EAAE,IAAI,EAAE,MAAM;qBACrB;iBACF,CAAA;YACH,CAAC;YACD,IAAI,IAAI,EAAE,SAAS,EAAE,CAAC;gBACpB,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;oBACxD,IAAI,CAAC;wBACH,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA;wBACxB,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;4BAClB,OAAO,KAAK,CAAA;wBACd,CAAC;6BAAM,CAAC;4BACN,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;4BAClB,OAAO,KAAK,CAAA;wBACd,CAAC;oBACH,CAAC;oBAAC,OAAO,KAAK,EAAE,CAAC;wBACf,OAAO,KAAK,CAAA;oBACd,CAAC;gBACH,CAAC,EAAE,EAAc,CAAC,CAAA;gBAClB,IAAI,GAAG,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC;oBACpB,KAAK,CAAC,GAAG,GAAG;wBACV,GAAI,KAAK,CAAC,GAAU;wBACpB;4BACE,QAAQ,EAAE;gCACR,EAAE,EAAE,GAAG;6BACR;yBACF;qBACF,CAAA;gBACH,CAAC;YACH,CAAC;YACD,IAAI,IAAI,EAAE,QAAQ,EAAE,CAAC;gBACnB,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;oBACvD,IAAI,CAAC;wBACH,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA;wBACxB,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;4BAClB,OAAO,KAAK,CAAA;wBACd,CAAC;6BAAM,CAAC;4BACN,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;4BAClB,OAAO,KAAK,CAAA;wBACd,CAAC;oBACH,CAAC;oBAAC,OAAO,KAAK,EAAE,CAAC;wBACf,OAAO,KAAK,CAAA;oBACd,CAAC;gBACH,CAAC,EAAE,EAAc,CAAC,CAAA;gBAClB,IAAI,GAAG,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC;oBACpB,KAAK,CAAC,GAAG,GAAG;wBACV,GAAI,KAAK,CAAC,GAAU;wBACpB;4BACE,EAAE,EAAE;gCACF;oCACE,UAAU,EAAE;wCACV,EAAE,EAAE,GAAG;qCACR;iCACF;gCACD;oCACE,UAAU,EAAE;wCACV,EAAE,EAAE,GAAG;qCACR;iCACF;6BACF;yBACF;qBACF,CAAA;gBACH,CAAC;YACH,CAAC;YACD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;YAClB,MAAM,IAAI,GAAW,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;YACjF,MAAM,IAAI,GAAW,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAA;YACnG,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;gBACtD,KAAK,EAAE,KAAK;gBACZ,IAAI;gBACJ,IAAI;gBACJ,OAAO,EAAE;oBACP,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,IAAI;oBACd,MAAM,EAAE,IAAI;oBACZ,MAAM,EAAE,IAAI;oBACZ,IAAI,EAAE;wBACJ,KAAK,EAAE;4BACL,IAAI,EAAE,WAAW;yBAClB;qBACF;iBACF;aACF,CAAC,CAAA;YAEF,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAwB;gBAC1C,EAAE,EAAE,IAAI;gBACR,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE,SAAS;gBAClB,IAAI,EAAE,QAAQ;aACf,CAAC,CAAA;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;YACvC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;YACzB,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAwB;gBACtD,EAAE,EAAE,IAAI;gBACR,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,8CAA8C;gBACvD,IAAI,EAAE,EAAE;aACT,CAAC,CAAA;QACJ,CAAC;IACH,CAAC;IACD,KAAK,CAAC,cAAc;QAClB,IAAI,CAAC;YACH,MAAM,EAAE,GAAG,MAAM,CAAE,IAAI,CAAC,GAAG,CAAC,MAA8B,EAAE,EAAE,CAAC,CAAA;YAC/D,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC;gBACvD,KAAK,EAAE;oBACL,EAAE,EAAE,EAAE;iBACP;gBACD,OAAO,EAAE;oBACP,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,IAAI;oBACd,IAAI,EAAE,IAAI;oBACV,MAAM,EAAE,IAAI;iBACb;aACF,CAAC,CAAA;YACF,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAwB;gBAC1C,EAAE,EAAE,IAAI;gBACR,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE,UAAU;gBACnB,IAAI,EAAE,OAAO;aACd,CAAC,CAAA;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;YACvC,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAwB;gBACtD,EAAE,EAAE,IAAI;gBACR,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,8CAA8C;gBACvD,IAAI,EAAE,IAAI;aACX,CAAC,CAAA;QACJ,CAAC;IACH,CAAC;IACD,KAAK,CAAC,2BAA2B;QAC/B,IAAI,CAAC;YACH,MAAM,EAAE,GAAG,MAAM,CAAE,IAAI,CAAC,GAAG,CAAC,MAA8B,EAAE,EAAE,CAAC,CAAA;YAC/D,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC;gBAC7D,KAAK,EAAE;oBACL,EAAE,EAAE,EAAE;iBACP;aACF,CAAC,CAAA;YACF,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAwB;gBAC1C,EAAE,EAAE,OAAO,EAAE,EAAE;gBACf,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE,UAAU;gBACnB,IAAI,EAAE,OAAO;aACd,CAAC,CAAA;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;YACvC,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAwB;gBACtD,EAAE,EAAE,IAAI;gBACR,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,8CAA8C;gBACvD,IAAI,EAAE,IAAI;aACX,CAAC,CAAA;QACJ,CAAC;IACH,CAAC;IACD,KAAK,CAAC,kBAAkB;QACtB,IAAI,CAAC;YACH,MAAM,EAAE,GAAG,MAAM,CAAE,IAAI,CAAC,GAAG,CAAC,MAA8B,EAAE,EAAE,CAAC,CAAA;YAC/D,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;gBAC/C,KAAK,EAAE;oBACL,SAAS,EAAE,EAAE;iBACd;aACF,CAAC,CAAA;YACF,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAwB;gBAC1C,EAAE,EAAE,IAAI;gBACR,IAAI,EAAE,IAAI;gBACV,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE,SAAS;aACnB,CAAC,CAAA;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;YACvC,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAwB;gBACtD,EAAE,EAAE,IAAI;gBACR,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,8CAA8C;gBACvD,IAAI,EAAE,IAAI;aACX,CAAC,CAAA;QACJ,CAAC;IACH,CAAC;IACD,KAAK,CAAC,gBAAgB;QACpB,IAAI,CAAC;YACH,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;gBACtD,OAAO,EAAE;oBACP,IAAI,EAAE;wBACJ,KAAK,EAAE;4BACL,IAAI,EAAE,WAAW;yBAClB;qBACF;oBACD,MAAM,EAAE,IAAI;oBACZ,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,IAAI;oBACd,MAAM,EAAE,IAAI;iBACb;gBACD,KAAK,EAAE;oBACL,IAAI,EAAE;wBACJ,IAAI,EAAE,EAAE;qBACT;oBACD,QAAQ,EAAE,IAAI;oBACd,IAAI,EAAE;wBACJ,GAAG,EAAE,IAAA,eAAK,GAAE,CAAC,MAAM,EAAE;qBACtB;iBACF;aACF,CAAC,CAAA;YAEF,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAwB;gBAC1C,EAAE,EAAE,IAAI;gBACR,IAAI,EAAE,OAAO;gBACb,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE,SAAS;aACnB,CAAC,CAAA;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;YACvC,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAwB;gBACtD,EAAE,EAAE,IAAI;gBACR,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,8CAA8C;gBACvD,IAAI,EAAE,IAAI;aACX,CAAC,CAAA;QACJ,CAAC;IACH,CAAC;CACF;AACD,kBAAe,kBAAkB,CAAA","sourcesContent":["import { Prisma } from '@prisma/client'\nimport dayjs from 'dayjs'\n\nimport { FixturesQueryParams, IDefaultQueryResponse } from './interface/fixtures'\nimport { BaseController } from './BaseController'\n\nclass FixturesController extends BaseController {\n  async getAllFixtures() {\n    try {\n      const body = this.req.query as FixturesQueryParams\n\n      const where: Prisma.FixtureWhereInput = {\n        AND: [\n          {\n            date: {\n              gte: dayjs().subtract(90, 'minutes').toDate(),\n            },\n          },\n        ],\n      }\n      if (body?.fromDate) {\n        where.AND = [\n          ...(where.AND as []),\n          {\n            date: {\n              gte: dayjs(body?.fromDate).toDate(),\n            },\n          },\n        ]\n      }\n      if (body?.toDate) {\n        where.AND = [\n          ...(where.AND as []),\n          {\n            date: {\n              lte: dayjs(body?.fromDate).toDate(),\n            },\n          },\n        ]\n      }\n      if (body?.country)\n        where.AND = [\n          ...(where.AND as []),\n          {\n            league: {\n              country: {\n                equals: body.country,\n                mode: 'insensitive',\n              },\n            },\n          },\n        ]\n      if (body?.status) {\n        where.AND = [\n          ...(where.AND as []),\n          {\n            status: body.status,\n          },\n        ]\n      }\n      if (body?.leagueIds) {\n        const ids = body.leagueIds.split('-').reduce((total, a) => {\n          try {\n            const number = Number(a)\n            if (isNaN(number)) {\n              return total\n            } else {\n              total.push(number)\n              return total\n            }\n          } catch (error) {\n            return total\n          }\n        }, [] as number[])\n        if (ids?.length > 0) {\n          where.AND = [\n            ...(where.AND as []),\n            {\n              leagueId: {\n                in: ids,\n              },\n            },\n          ]\n        }\n      }\n      if (body?.teamsIds) {\n        const ids = body.teamsIds.split('-').reduce((total, a) => {\n          try {\n            const number = Number(a)\n            if (isNaN(number)) {\n              return total\n            } else {\n              total.push(number)\n              return total\n            }\n          } catch (error) {\n            return total\n          }\n        }, [] as number[])\n        if (ids?.length > 0) {\n          where.AND = [\n            ...(where.AND as []),\n            {\n              OR: [\n                {\n                  homeTeamId: {\n                    in: ids,\n                  },\n                },\n                {\n                  awayTeamId: {\n                    in: ids,\n                  },\n                },\n              ],\n            },\n          ]\n        }\n      }\n      const take: number = isNaN(Number(body?.pageSize)) ? 100 : Number(body?.pageSize)\n      const skip: number = isNaN((Number(body?.page) ?? 0) * take) ? 0 : (Number(body?.page) ?? 0) * take\n      const fixtures = await this.app.prisma.fixture.findMany({\n        where: where,\n        take,\n        skip,\n        include: {\n          homeTeam: true,\n          awayTeam: true,\n          league: true,\n          result: true,\n        },\n      })\n\n      return this.res.send(<IDefaultQueryResponse>{\n        id: null,\n        success: true,\n        message: 'Success',\n        data: fixtures,\n      })\n    } catch (error) {\n      this.app.Sentry.captureException(error)\n      this.app.log.error(error)\n      return this.res.status(500).send(<IDefaultQueryResponse>{\n        id: null,\n        success: false,\n        message: 'Error! Something went wrong please try again',\n        data: [],\n      })\n    }\n  }\n\n  async getAllBettingFixtures() {\n    try {\n      const body = this.req.query as FixturesQueryParams\n\n      const where: Prisma.FixtureWhereInput = {\n        AND: [\n          {\n            odds: {\n              some: {},\n            },\n          },\n        ],\n      }\n      if (body?.status && body.status == 'FINISHED') {\n        where.AND = [\n          ...(where.AND as []),\n          {\n            status: body?.status,\n          },\n        ]\n      } else {\n        where.AND = [\n          ...(where.AND as []),\n          {\n            date: {\n              gte: dayjs().subtract(90, 'minutes').toDate(),\n            },\n          },\n        ]\n      }\n      if (body?.fromDate) {\n        where.AND = [\n          ...(where.AND as []),\n          {\n            date: {\n              gte: dayjs(body?.fromDate).toDate(),\n            },\n          },\n        ]\n      }\n      if (body?.toDate) {\n        where.AND = [\n          ...(where.AND as []),\n          {\n            date: {\n              lte: dayjs(body?.fromDate).toDate(),\n            },\n          },\n        ]\n      }\n      if (body?.country)\n        where.AND = [\n          ...(where.AND as []),\n          {\n            league: {\n              country: {\n                equals: body.country,\n                mode: 'insensitive',\n              },\n            },\n          },\n        ]\n      if (body?.status) {\n        where.AND = [\n          ...(where.AND as []),\n          {\n            status: body?.status,\n          },\n        ]\n      }\n      if (body?.leagueIds) {\n        const ids = body.leagueIds.split('-').reduce((total, a) => {\n          try {\n            const number = Number(a)\n            if (isNaN(number)) {\n              return total\n            } else {\n              total.push(number)\n              return total\n            }\n          } catch (error) {\n            return total\n          }\n        }, [] as number[])\n        if (ids?.length > 0) {\n          where.AND = [\n            ...(where.AND as []),\n            {\n              leagueId: {\n                in: ids,\n              },\n            },\n          ]\n        }\n      }\n      if (body?.teamsIds) {\n        const ids = body.teamsIds.split('-').reduce((total, a) => {\n          try {\n            const number = Number(a)\n            if (isNaN(number)) {\n              return total\n            } else {\n              total.push(number)\n              return total\n            }\n          } catch (error) {\n            return total\n          }\n        }, [] as number[])\n        if (ids?.length > 0) {\n          where.AND = [\n            ...(where.AND as []),\n            {\n              OR: [\n                {\n                  homeTeamId: {\n                    in: ids,\n                  },\n                },\n                {\n                  awayTeamId: {\n                    in: ids,\n                  },\n                },\n              ],\n            },\n          ]\n        }\n      }\n      console.log(where)\n      const take: number = isNaN(Number(body?.pageSize)) ? 100 : Number(body?.pageSize)\n      const skip: number = isNaN((Number(body?.page) ?? 0) * take) ? 0 : (Number(body?.page) ?? 0) * take\n      const fixtures = await this.app.prisma.fixture.findMany({\n        where: where,\n        take,\n        skip,\n        include: {\n          homeTeam: true,\n          awayTeam: true,\n          league: true,\n          result: true,\n          odds: {\n            where: {\n              type: 'WINNER_FT',\n            },\n          },\n        },\n      })\n\n      return this.res.send(<IDefaultQueryResponse>{\n        id: null,\n        success: true,\n        message: 'Success',\n        data: fixtures,\n      })\n    } catch (error) {\n      this.app.Sentry.captureException(error)\n      this.app.log.error(error)\n      return this.res.status(500).send(<IDefaultQueryResponse>{\n        id: null,\n        success: false,\n        message: 'Error! Something went wrong please try again',\n        data: [],\n      })\n    }\n  }\n  async getFixtureById() {\n    try {\n      const id = Number((this.req.params as Record<string, any>)?.id)\n      const fixture = await this.app.prisma.fixture.findUnique({\n        where: {\n          id: id,\n        },\n        include: {\n          homeTeam: true,\n          awayTeam: true,\n          odds: true,\n          league: true,\n        },\n      })\n      return this.res.send(<IDefaultQueryResponse>{\n        id: null,\n        success: true,\n        message: 'Success!',\n        data: fixture,\n      })\n    } catch (error) {\n      this.app.Sentry.captureException(error)\n      return this.res.status(500).send(<IDefaultQueryResponse>{\n        id: null,\n        success: false,\n        message: 'Error! Something went wrong please try again',\n        data: null,\n      })\n    }\n  }\n  async getFixtureResultByFixtureId() {\n    try {\n      const id = Number((this.req.params as Record<string, any>)?.id)\n      const fixture = await this.app.prisma.fixtureResult.findUnique({\n        where: {\n          id: id,\n        },\n      })\n      return this.res.send(<IDefaultQueryResponse>{\n        id: fixture?.id,\n        success: true,\n        message: 'Success!',\n        data: fixture,\n      })\n    } catch (error) {\n      this.app.Sentry.captureException(error)\n      return this.res.status(500).send(<IDefaultQueryResponse>{\n        id: null,\n        success: false,\n        message: 'Error! Something went wrong please try again',\n        data: null,\n      })\n    }\n  }\n  async getFixtureoddsById() {\n    try {\n      const id = Number((this.req.params as Record<string, any>)?.id)\n      const odds = await this.app.prisma.odds.findMany({\n        where: {\n          fixtureId: id,\n        },\n      })\n      return this.res.send(<IDefaultQueryResponse>{\n        id: null,\n        data: odds,\n        success: true,\n        message: 'Success',\n      })\n    } catch (error) {\n      this.app.Sentry.captureException(error)\n      return this.res.status(500).send(<IDefaultQueryResponse>{\n        id: null,\n        success: false,\n        message: 'Error! Something went wrong please try again',\n        data: null,\n      })\n    }\n  }\n  async getFeaturedMatch() {\n    try {\n      const fixture = await this.app.prisma.fixture.findFirst({\n        include: {\n          odds: {\n            where: {\n              type: 'WINNER_FT',\n            },\n          },\n          league: true,\n          awayTeam: true,\n          homeTeam: true,\n          result: true,\n        },\n        where: {\n          odds: {\n            some: {},\n          },\n          featured: true,\n          date: {\n            gte: dayjs().toDate(),\n          },\n        },\n      })\n\n      return this.res.send(<IDefaultQueryResponse>{\n        id: null,\n        data: fixture,\n        success: true,\n        message: 'Success',\n      })\n    } catch (error) {\n      this.app.Sentry.captureException(error)\n      return this.res.status(500).send(<IDefaultQueryResponse>{\n        id: null,\n        success: false,\n        message: 'Error! Something went wrong please try again',\n        data: null,\n      })\n    }\n  }\n}\nexport default FixturesController\n"]}