{"version":3,"file":"communication.js","sourceRoot":"/","sources":["plugins/communication.ts"],"names":[],"mappings":"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","sourcesContent":["import { configs } from '@configs/index'\nimport africastalking from 'africastalking'\nimport axios, { AxiosRequestConfig } from 'axios'\nimport { FastifyInstance } from 'fastify'\nimport fp from 'fastify-plugin'\ninterface ICommunication {\n  sendSms(phone: string, message: string): Promise<boolean>\n}\nconst sendSmsAfrikasTalking = async (fastify: FastifyInstance, phone: string, message: string) => {\n  const atClient = africastalking({ apiKey: configs.afrikasTalking.apiKey, username: configs.afrikasTalking.username })\n  const smsClient = atClient.SMS\n  try {\n    const response = await smsClient.send({\n      to: [fastify.helpers.formatPhoneNumber(phone)],\n      message,\n      from: configs.afrikasTalking.senderId,\n    })\n    if (!response) return false\n    return true\n  } catch (error) {\n    fastify.Sentry.captureException(error)\n    return false\n  }\n}\n\nconst sendSmsLeopardSms = async (fastify: FastifyInstance, phone: string, message: string) => {\n  try {\n    const config: AxiosRequestConfig = {\n      method: 'POST',\n      url: 'https://api.smsleopard.com/v1/sms/send',\n      auth: {\n        username: configs.smsLeopard.apiKey,\n        password: configs.smsLeopard.apiSecret,\n      },\n      data: {\n        source: 'sms_test',\n        message: message,\n        destination: [\n          {\n            number: fastify.helpers.formatPhoneNumber(phone),\n          },\n        ],\n      },\n    }\n    const response = await axios(config)\n      .then((resp) => {\n        fastify.log.info(resp?.data)\n        return true\n      })\n      .catch((err) => {\n        fastify.log.info(err?.response?.data)\n        fastify.Sentry.captureException(err?.response?.data)\n        return false\n      })\n    return response\n  } catch (error) {\n    return false\n  }\n}\nexport default fp<ICommunication>(async (fastify) => {\n  const sendSms = async (phone: string, message: string): Promise<boolean> => {\n    try {\n      switch (configs.smsPlatform) {\n        case 'smsleopard': {\n          const response = await sendSmsAfrikasTalking(fastify, phone, message)\n          return response\n        }\n        case 'africastalking': {\n          const response = await sendSmsLeopardSms(fastify, phone, message)\n          return response\n        }\n      }\n    } catch (error) {\n      return false\n    }\n  }\n  fastify.decorate('messaging', { sendSms })\n})\n\n// When using .decorate you have to specify added properties for Typescript\ndeclare module 'fastify' {\n  export interface FastifyInstance {\n    messaging: ICommunication\n  }\n}\n"]}