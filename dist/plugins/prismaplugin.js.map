{"version":3,"file":"prismaplugin.js","sourceRoot":"/","sources":["plugins/prismaplugin.ts"],"names":[],"mappings":";;;;;AAAA,2CAA6C;AAC7C,oEAA+B;AAI/B,kBAAe,IAAA,wBAAE,EAAe,KAAK,EAAE,OAAO,EAAE,EAAE;IAChD,MAAM,MAAM,GAAG,IAAI,qBAAY,CAAC,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC,CAAA;IAC1D,MAAM,MAAM;SACT,QAAQ,EAAE;SACV,IAAI,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;SAC9C,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;IACvB,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;AACpC,CAAC,CAAC,CAAA","sourcesContent":["import { PrismaClient } from '@prisma/client'\nimport fp from 'fastify-plugin'\n\n// The use of fastify-plugin is required to be able\n// to export the decorators to the outer scope\nexport default fp<PrismaClient>(async (fastify) => {\n  const prisma = new PrismaClient({ errorFormat: 'pretty' })\n  await prisma\n    .$connect()\n    .then(() => console.log('ðŸš€ Prisma connected'))\n    .catch(console.error)\n  fastify.decorate('prisma', prisma)\n})\n\n// When using .decorate you have to specify added properties for Typescript\ndeclare module 'fastify' {\n  export interface FastifyInstance {\n    prisma: PrismaClient\n  }\n}\n"]}