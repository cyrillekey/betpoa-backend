{"version":3,"file":"app.js","sourceRoot":"/","sources":["app.ts"],"names":[],"mappings":";;;;;;AAAA,iCAA8B;AAE9B,iEAAmE;AACnE,yDAAgC;AAChC,+DAAsC;AAEtC,qFAAoD;AAGpD,2DAAiE;AAEjE,+BAA2B;AAE3B,uCAAmC;AAInC,MAAM,OAAO,GAAe,EAAE,CAAA;AA6FhB,0BAAO;AA3FrB,MAAM,GAAG,GAAmC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAiB,EAAE;IAEjF,OAAO,CAAC,gBAAgB,EAAuB,CAAA;IAE/C,OAAO,CAAC,QAAQ,CAAC,wBAAM,EAAE;QACvB,GAAG,EAAE,iGAAiG;QACtG,YAAY,EAAE,CAAC,IAAA,yCAAwB,GAAE,CAAC;QAC1C,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,YAAY,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,SAAS;QAClF,gBAAgB,EAAE,GAAG;QACrB,aAAa,EAAE,IAAI;QACnB,OAAO,EAAE,OAAO;KACjB,CAAC,CAAA;IAEF,OAAO,CAAC,QAAQ,CAAC,cAAI,EAAE;QACrB,MAAM,EAAE,IAAI;KACb,CAAC,CAAA;IACF,OAAO,CAAC,QAAQ,CAAC,iBAAO,EAAE;QACxB,OAAO,EAAE;YACP,OAAO,EAAE,OAAO;YAChB,IAAI,EAAE;gBACJ,KAAK,EAAE,sBAAsB;gBAC7B,WAAW,EAAE,uCAAuC;gBACpD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,EAAE,KAAK,EAAE,0BAA0B,EAAE;gBAC9C,OAAO,EAAE,yBAAyB;aACnC;YACD,IAAI,EAAE;gBACJ;oBACE,IAAI,EAAE,MAAM;oBACZ,WAAW,EAAE,iEAAiE;iBAC/E;gBACD;oBACE,IAAI,EAAE,MAAM;oBACZ,WAAW,EAAE,mDAAmD;iBACjE;gBACD;oBACE,IAAI,EAAE,QAAQ;oBACd,WAAW,EAAE,iGAAiG;iBAC/G;gBACD;oBACE,IAAI,EAAE,SAAS;oBACf,WAAW,EACT,0MAA0M;iBAC7M;gBACD;oBACE,IAAI,EAAE,OAAO;oBACb,WAAW,EAAE,2GAA2G,iBAAO,CAAC,OAAO,EAAE;iBAC1I;aACF;YACD,OAAO,EAAE;gBACP;oBACE,GAAG,EAAE,iBAAO,CAAC,MAAM;oBACnB,WAAW,EAAE,mBAAmB;iBACjC;aACF;YACD,UAAU,EAAE;gBACV,eAAe,EAAE;oBACf,UAAU,EAAE;wBACV,IAAI,EAAE,MAAM;wBACZ,MAAM,EAAE,QAAQ;wBAChB,YAAY,EAAE,KAAK;qBACpB;iBACF;aACF;SACF;KACF,CAAC,CAAA;IAYF,KAAK,OAAO,CAAC,QAAQ,CAAC,kBAAQ,EAAE;QAC9B,GAAG,EAAE,IAAA,WAAI,EAAC,SAAS,EAAE,SAAS,CAAC;QAC/B,OAAO,EAAE,IAAI;KACd,CAAC,CAAA;IAIF,KAAK,OAAO,CAAC,QAAQ,CAAC,kBAAQ,EAAE;QAC9B,GAAG,EAAE,IAAA,WAAI,EAAC,SAAS,EAAE,QAAQ,CAAC;QAC9B,OAAO,EAAE,IAAI;KACd,CAAC,CAAA;AACJ,CAAC,CAAA;AAGQ,kBAAG;AADZ,kBAAe,GAAG,CAAA","sourcesContent":["import 'module-alias/register'\n\nimport AutoLoad, { AutoloadPluginOptions } from '@fastify/autoload'\nimport cors from '@fastify/cors'\nimport swagger from '@fastify/swagger'\nimport { TypeBoxTypeProvider } from '@fastify/type-provider-typebox'\nimport Sentry from '@immobiliarelabs/fastify-sentry'\n// // @ts-ignore\n// import scalarDocumentation from '@scalar/fastify-api-reference'\nimport { nodeProfilingIntegration } from '@sentry/profiling-node'\nimport { FastifyPluginAsync, FastifyServerOptions } from 'fastify'\nimport { join } from 'path'\n\nimport { configs } from './configs'\n\nexport interface AppOptions extends FastifyServerOptions, Partial<AutoloadPluginOptions> {}\n// Pass --options via CLI arguments in command to enable these options.\nconst options: AppOptions = {}\n\nconst app: FastifyPluginAsync<AppOptions> = async (fastify, opts): Promise<void> => {\n  // Place here your custom code!\n  fastify.withTypeProvider<TypeBoxTypeProvider>()\n  // Do not touch the following lines\n  fastify.register(Sentry, {\n    dsn: 'https://921097d6a76bab89051f3a2d7433fa20@o4507057833902080.ingest.us.sentry.io/4507057837506560',\n    integrations: [nodeProfilingIntegration()],\n    enabled: process.env.NODE_ENV == 'production' || process.env.NODE_ENV == 'staging',\n    tracesSampleRate: 0.3,\n    enableTracing: true,\n    release: '1.0.0',\n  })\n  // fastify.register(fastifyHtml)\n  fastify.register(cors, {\n    origin: true,\n  })\n  fastify.register(swagger, {\n    openapi: {\n      openapi: '3.0.0',\n      info: {\n        title: 'Betpoa Documentation',\n        description: 'Betpoa Betting Rest Api Documentation',\n        version: '1.0.0',\n        contact: { email: 'cyrilleotieno7@gmail.com' },\n        summary: 'Betpoa backend rest api',\n      },\n      tags: [\n        {\n          name: 'Auth',\n          description: 'Betpoa authentication methods covering signup to password reset',\n        },\n        {\n          name: 'User',\n          description: 'Betpoa methods that interact with the user object',\n        },\n        {\n          name: 'League',\n          description: 'Betpoa leagues for for different seasons and competitions which fixtures and odds are available',\n        },\n        {\n          name: 'Fixture',\n          description:\n            'Betpoa match fixtures for past and upcoming fixtures as well as fixture results and fixture odds.\\n All fixtures and odds are updated everyday at midnight and future fixtures are available upto 3 days',\n        },\n        {\n          name: 'Admin',\n          description: `Administrative endpoints for managing the system,users,bets and all administrative task associated with ${configs.appname}`,\n        },\n      ],\n      servers: [\n        {\n          url: configs.apiurl,\n          description: 'Production server',\n        },\n      ],\n      components: {\n        securitySchemes: {\n          bearerAuth: {\n            type: 'http',\n            scheme: 'bearer',\n            bearerFormat: 'JWT',\n          },\n        },\n      },\n    },\n  })\n  // fastify.register(scalarDocumentation, {\n  //   routePrefix: '/api/documentation',\n  //   configuration: {\n  //     spec: {\n  //       content: () => fastify.swagger(),\n  //     },\n  //   },\n  // })\n  // This loads all plugins defined in plugins\n  // those should be support plugins that are reused\n  // through your application\n  void fastify.register(AutoLoad, {\n    dir: join(__dirname, 'plugins'),\n    options: opts,\n  })\n\n  // This loads all plugins defined in routes\n  // define your routes in one of these\n  void fastify.register(AutoLoad, {\n    dir: join(__dirname, 'routes'),\n    options: opts,\n  })\n}\n\nexport default app\nexport { app, options }\n"]}