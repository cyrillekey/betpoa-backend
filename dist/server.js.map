{"version":3,"file":"server.js","sourceRoot":"/","sources":["server.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,gDAA+B;AAC/B,+CAAiC;AACjC,MAAM,CAAC,MAAM,EAAE,CAAC;AAGhB,sDAA8B;AAG9B,wEAA8C;AAG9C,MAAM,GAAG,GAAG,IAAA,iBAAO,EAAC;IAClB,MAAM,EAAE,IAAI;CACb,CAAC,CAAC;AAGH,GAAG,CAAC,QAAQ,CAAC,aAAU,CAAC,CAAC;AAGzB,IAAA,0BAAc,EAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,yBAA0B,CAAC,IAAI,GAAG,EAAE,EAAE,KAAK,WAAW,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE;IACxH,IAAI,GAAG,EAAE,CAAC;QACR,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IACpB,CAAC;IACD,MAAM,GAAG,CAAC,KAAK,EAAE,CAAA;AACnB,CAA+C,CAAC,CAAA;AAGhD,GAAG,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAK,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,GAAQ,EAAE,EAAE;IACrE,IAAI,GAAG,EAAE,CAAC;QACR,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;AACH,CAAC,CAAC,CAAC","sourcesContent":["// Read the .env file.\nimport fastifyApp from \"./app\";\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// Require the framework\nimport Fastify from \"fastify\";\n\n// Require library to exit fastify process, gracefully (if possible)\nimport closeWithGrace from \"close-with-grace\";\n\n// Instantiate Fastify with some config\nconst app = Fastify({\n  logger: true,\n});\n\n// Register your application as a normal plugin.\napp.register(fastifyApp);\n\n// delay is the number of milliseconds for the graceful close to finish \ncloseWithGrace({ delay: parseInt(process.env.FASTIFY_CLOSE_GRACE_DELAY!) || 500 }, async function ({ signal, err, manual }) {\n  if (err) {\n    app.log.error(err)\n  }\n  await app.close()\n} as closeWithGrace.CloseWithGraceAsyncCallback)\n\n// Start listening.\napp.listen({ port: parseInt(process.env.PORT!) || 3000 }, (err: any) => {\n  if (err) {\n    app.log.error(err);\n    process.exit(1);\n  }\n});\n"]}