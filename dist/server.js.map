{"version":3,"file":"server.js","sourceRoot":"/","sources":["server.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,+CAAgC;AAEhC,gDAA8B;AAC9B,MAAM,CAAC,MAAM,EAAE,CAAA;AAIf,wEAA6C;AAC7C,sDAA6B;AAG7B,MAAM,GAAG,GAAG,IAAA,iBAAO,EAAC;IAClB,MAAM,EAAE,IAAI;CACb,CAAC,CAAA;AAGF,GAAG,CAAC,QAAQ,CAAC,aAAU,CAAC,CAAA;AAGxB,IAAA,0BAAc,EAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,yBAA0B,CAAC,IAAI,GAAG,EAAE,EAAE,KAAK,WAAW,EAAE,GAAG,EAAE;IACxG,IAAI,GAAG,EAAE,CAAC;QACR,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IACpB,CAAC;IACD,MAAM,GAAG,CAAC,KAAK,EAAE,CAAA;AACnB,CAA+C,CAAC,CAAA;AAGhD,GAAG,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAK,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,GAAQ,EAAE,EAAE;IACrE,IAAI,GAAG,EAAE,CAAC;QACR,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QAClB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACjB,CAAC;AACH,CAAC,CAAC,CAAA","sourcesContent":["// Read the .env file.\n\nimport * as dotenv from 'dotenv'\n\nimport fastifyApp from './app'\ndotenv.config()\n\n// Require the framework\n// Require library to exit fastify process, gracefully (if possible)\nimport closeWithGrace from 'close-with-grace'\nimport Fastify from 'fastify'\n\n// Instantiate Fastify with some config\nconst app = Fastify({\n  logger: true,\n})\n\n// Register your application as a normal plugin.\napp.register(fastifyApp)\n\n// delay is the number of milliseconds for the graceful close to finish\ncloseWithGrace({ delay: parseInt(process.env.FASTIFY_CLOSE_GRACE_DELAY!) || 500 }, async function ({ err }) {\n  if (err) {\n    app.log.error(err)\n  }\n  await app.close()\n} as closeWithGrace.CloseWithGraceAsyncCallback)\n\n// Start listening.\napp.listen({ port: parseInt(process.env.PORT!) || 3000 }, (err: any) => {\n  if (err) {\n    app.log.error(err)\n    process.exit(1)\n  }\n})\n"]}