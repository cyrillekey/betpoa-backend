{"version":3,"file":"leagues.js","sourceRoot":"/","sources":["cronjobs/leagues.ts"],"names":[],"mappings":";;;AAAA,2CAA4C;AAGrC,MAAM,oBAAoB,GAAG,KAAK,EAAE,GAAoB,EAAE,EAAE;IACjE,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,cAAc,CACzC;QACE,WAAW,EAAE,kBAAkB;QAC/B,MAAM,EAAE,aAAa;KACtB,EACD;QACE,QAAQ,EAAE;YAER,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,aAAa;SACrB;QACD,aAAa,EAAE,CAAC;QAChB,UAAU,EAAE,EAAE;QACd,QAAQ,EAAE,gBAAgB;KAC3B,CACF,CAAA;IACD,IAAI,CAAC;QACH,MAAM,OAAO,GAAG,MAAM,IAAA,kBAAU,GAAE,CAAA;QAClC,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC;YACjC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBACxB,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI;gBACzB,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE;gBACvB,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI;gBACrB,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI;gBACrB,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI;gBACrB,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACjD,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE;aAClB,CAAC,CAAC;YACH,cAAc,EAAE,IAAI;SACrB,CAAC,CAAA;QACF,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,SAAS,EAAE,WAAW,EAAE,kBAAkB,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAA;IACzF,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,GAAG,CAAC,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;QAClC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;QACpB,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,SAAS,EAAE,WAAW,EAAE,kBAAkB,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAA;IAC5F,CAAC;AACH,CAAC,CAAA;AArCY,QAAA,oBAAoB,wBAqChC","sourcesContent":["import { getLeagues } from '@rapidapi/index'\nimport { FastifyInstance } from 'fastify'\n\nexport const createLeaguesCronjob = async (app: FastifyInstance) => {\n  const checkInId = app.Sentry.captureCheckIn(\n    {\n      monitorSlug: 'get_leagues_cron',\n      status: 'in_progress',\n    },\n    {\n      schedule: {\n        // Specify your schedule options here\n        type: 'crontab',\n        value: '15 00 1 * *',\n      },\n      checkinMargin: 1,\n      maxRuntime: 10,\n      timezone: 'Africa/Nairobi',\n    },\n  )\n  try {\n    const leagues = await getLeagues()\n    await app.prisma.league.createMany({\n      data: leagues.map((a) => ({\n        country: a?.country?.name,\n        leagueId: a?.league?.id,\n        logo: a?.league?.logo,\n        name: a?.league?.name,\n        type: a?.league?.type,\n        season: a?.seasons?.at(0)?.year?.toString() ?? '',\n        id: a?.league?.id,\n      })),\n      skipDuplicates: true,\n    })\n    app.Sentry.captureCheckIn({ checkInId, monitorSlug: 'get_leagues_cron', status: 'ok' })\n  } catch (error) {\n    app.Sentry.captureException(error)\n    app.log.error(error)\n    app.Sentry.captureCheckIn({ checkInId, monitorSlug: 'get_leagues_cron', status: 'error' })\n  }\n}\n"]}