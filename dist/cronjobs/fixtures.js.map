{"version":3,"file":"fixtures.js","sourceRoot":"/","sources":["cronjobs/fixtures.ts"],"names":[],"mappings":"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","sourcesContent":["import { MATCHSTATUS } from '@prisma/client'\nimport { getUpcomingFixtures } from '@rapidapi/index'\nimport dayjs from 'dayjs'\nimport { FastifyInstance } from 'fastify'\n\nexport const getUpcomingFixturesCronjobs = async (app: FastifyInstance) => {\n  const checkInId = app.Sentry.captureCheckIn(\n    {\n      monitorSlug: 'upcoming_fixtures_cron',\n      status: 'in_progress',\n    },\n    {\n      schedule: {\n        // Specify your schedule options here\n        type: 'crontab',\n        value: '30 03 * * *',\n      },\n      checkinMargin: 1,\n      maxRuntime: 10,\n      timezone: 'Africa/Nairobi',\n    },\n  )\n\n  try {\n    for (let index = 0; index < 3; index++) {\n      app.log.info(`Genetating fixtures for ${dayjs().add(index, 'day').toDate()}`)\n      try {\n        const fixtures = await getUpcomingFixtures(dayjs().add(index, 'day').toDate())\n        const leagues = fixtures.map((a) => a?.league)\n        await app.prisma.league.createMany({\n          skipDuplicates: true,\n          data: leagues.map((a) => ({\n            country: a?.name,\n            leagueId: a?.id,\n            logo: a?.logo,\n            name: a?.name,\n            type: a?.type ?? a?.name,\n            season: new Date().getFullYear().toString(),\n            id: a?.id,\n          })),\n        })\n        const allTeams = fixtures\n          .map((a) => {\n            if (a?.teams?.home && a?.teams?.away) return [a?.teams?.away, a?.teams.home]\n            return []\n          })\n          .flat()\n\n        const teamIds = [...new Set(allTeams?.map((a) => a?.id))]\n        const teams = teamIds.map((a) => allTeams.find((b) => b?.id == a))\n\n        await app.prisma.team.createMany({\n          skipDuplicates: true,\n          data: teams?.map((a) => ({\n            teamId: a!.id,\n            code: a!.name,\n            logo: a!.logo,\n            name: a!.name,\n            venue: '',\n            id: a?.id,\n          })),\n        })\n        await app.prisma.fixture.createMany({\n          skipDuplicates: true,\n          data: fixtures\n            .filter((a) => a?.teams?.away && a?.teams?.home)\n            .map((a) => ({\n              fixtureId: a?.fixture?.id,\n              awayTeamId: a?.teams?.away?.id,\n              homeTeamId: a?.teams?.home?.id,\n              date: a?.fixture?.date,\n              leagueId: a?.league?.id,\n              referee: a?.fixture?.referee ?? 'N/A',\n              shortStatus: a?.fixture?.status?.short,\n              status: getFixtureStatus(a!.fixture!.status!.short!),\n            })),\n        })\n        const fixturesTransaction: any[] = []\n        const fixturesToCreate = fixtures.filter((a) => a?.teams?.away && a?.teams?.home)\n        for (let index = 0; index < fixturesToCreate.length; index++) {\n          const fixture = fixturesToCreate[index]\n          const fixtureResult = await app.prisma.fixtureResult\n            .findFirstOrThrow({\n              where: {\n                fixture: {\n                  fixtureId: fixture?.fixture?.id,\n                },\n              },\n            })\n            .then((resp) => resp?.id)\n            .catch(() => null)\n          if (fixtureResult == null) {\n            fixturesTransaction.push(\n              app.prisma.fixtureResult.create({\n                data: {\n                  awayGoals: fixture?.score?.fulltime?.away,\n                  homeGoals: fixture?.score?.fulltime?.home,\n                  htAwayGoals: fixture?.score?.halftime?.away,\n                  htHomeGoals: fixture?.score?.halftime?.home,\n                  extraAwayGoals: fixture?.score?.extratime?.away ?? undefined,\n                  extraHomeGoals: fixture?.score?.extratime?.home ?? undefined,\n                  fixture: {\n                    connect: {\n                      fixtureId: fixture?.fixture?.id,\n                    },\n                  },\n                },\n              }),\n            )\n          } else {\n            console.log(fixtureResult)\n            fixturesTransaction.push(\n              app.prisma.fixtureResult.update({\n                where: {\n                  id: fixtureResult!,\n                },\n                data: {\n                  awayGoals: fixture?.score?.fulltime?.away,\n                  homeGoals: fixture?.score?.fulltime?.home,\n                  htAwayGoals: fixture?.score?.halftime?.away,\n                  htHomeGoals: fixture?.score?.halftime?.home,\n                  extraAwayGoals: fixture?.score?.extratime?.away,\n                  extraHomeGoals: fixture?.score?.extratime?.home,\n                },\n              }),\n            )\n          }\n        }\n\n        await app.prisma.$transaction(fixturesTransaction)\n        app.log.info(`Genetating fixtures for ${dayjs().add(index, 'day').toDate()}`)\n      } catch (error) {\n        app.Sentry.captureException(error)\n        app.log.error(error)\n      }\n    }\n    app.Sentry.captureCheckIn({ checkInId, monitorSlug: 'upcoming_fixtures_cron', status: 'ok' })\n    app.log.info(`Finished generating fixtures `)\n  } catch (error) {\n    app.Sentry.captureException(error, { level: 'fatal' })\n    app.log.error(error)\n    app.Sentry.captureCheckIn({ checkInId, monitorSlug: 'upcoming_fixtures_cron', status: 'error' })\n  }\n}\n\nexport const getFixturesResults = async (app: FastifyInstance) => {\n  const checkInId = app.Sentry.captureCheckIn(\n    {\n      monitorSlug: 'fixtures_result_cron',\n      status: 'in_progress',\n    },\n    {\n      schedule: {\n        // Specify your schedule options here\n        type: 'crontab',\n        value: '*/20 * * * *',\n      },\n      checkinMargin: 1,\n      maxRuntime: 10,\n      timezone: 'Africa/Nairobi',\n    },\n  )\n  try {\n    // get results today\n    await generateResults(app, dayjs().toDate())\n    // get results for last night if cronjob runs a few minutes past midnight\n\n    const endDate = dayjs().startOf('day').add(150, 'minutes').toDate()\n    if (dayjs().isBefore(endDate)) {\n      await generateResults(app, dayjs().subtract(1, 'day').toDate())\n    } //\n  } catch (error) {\n    app.Sentry.captureException(error)\n\n    app.Sentry.captureCheckIn({ checkInId, monitorSlug: 'fixtures_result_cron', status: 'error' })\n  }\n}\n\nconst getFixtureStatus = (status: string): MATCHSTATUS => {\n  switch (status) {\n    case 'TBD':\n    case 'NS':\n      return 'UPCOMMING'\n    case '1H':\n    case 'HT':\n    case '2H':\n    case 'ET':\n    case 'BT':\n    case 'P':\n    case 'INT':\n    case 'LIVE':\n      return 'INPLAY'\n    case 'FT':\n    case 'AET':\n    case 'PEN':\n      return 'FINISHED'\n    case 'SUSP':\n    case 'PST':\n    case 'CANC':\n    case 'ABD':\n    case 'WO':\n    case 'AWD':\n      return 'ABANDONED'\n    default:\n      return 'CANCELLED'\n  }\n}\nasync function generateResults(app: FastifyInstance, date: Date) {\n  const resultsToday = await getUpcomingFixtures(date)\n  const fixtureIds = resultsToday.map((a) => a?.fixture?.id)\n  const results = await app.prisma.fixtureResult.findMany({\n    where: {\n      fixture: {\n        fixtureId: {\n          in: fixtureIds,\n        },\n      },\n    },\n    select: {\n      fixture: {\n        select: {\n          fixtureId: true,\n          id: true,\n        },\n      },\n    },\n  })\n  for (let index = 0; index < results.length; index++) {\n    const result = resultsToday.find((a) => a?.fixture?.id == results[index]?.fixture?.fixtureId)\n    await app.prisma.fixtureResult.update({\n      where: {\n        fixtureId: results[index]?.fixture?.id,\n      },\n      data: {\n        awayGoals: result?.score?.fulltime?.away,\n        homeGoals: result?.score?.fulltime?.home,\n        extraAwayGoals: result?.score?.extratime?.away,\n        extraHomeGoals: result?.score?.extratime?.home,\n        htAwayGoals: result?.score?.halftime?.away,\n        htHomeGoals: result?.score?.halftime?.home,\n        fixture: {\n          update: {\n            status: getFixtureStatus(result?.fixture?.status?.short ?? 'NP'),\n            shortStatus: result?.fixture?.status?.short,\n          },\n        },\n      },\n    })\n  }\n}\n"]}