{"version":3,"file":"index.js","sourceRoot":"/","sources":["utils/mpesa/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { configs } from '@configs/index'\nimport * as Sentry from '@sentry/node'\nimport axios from 'axios'\nimport { constants, publicEncrypt } from 'crypto'\nimport dayjs from 'dayjs'\nimport { readFileSync } from 'fs'\nimport { join, resolve } from 'path'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport {\n  IntitateMpesaStkResponse,\n  MpesaB2BResponse,\n  MpesaExpressResponse,\n  MpesaTransactionStatus,\n  MpesaTransactionStatusResponse,\n  StkResponse,\n} from './type'\n\nclass MpesaLibrary {\n  private static baseUrl: string = process.env.NODE_ENV == 'production' ? 'https://api.safaricom.co.ke' : 'https://sandbox.safaricom.co.ke'\n\n  private static certPath: string =\n    process.env.NODE_ENV == 'production'\n      ? join(process.cwd(), 'conf', 'ProductionCertificate.cer')\n      : join(process.cwd(), 'conf', 'SandboxCertificate.cer')\n  // GET MPESA API CREDENTIALS\n\n  private static async authenticate(): Promise<string | null> {\n    try {\n      const token: string = btoa(`${configs.mpesa.consumerKey}:${configs.mpesa.consumerSecret}`)\n      const config = {\n        method: 'get',\n        url: `${this.baseUrl}/oauth/v1/generate?grant_type=client_credentials`,\n        headers: {\n          Authorization: `Basic ${token}`,\n        },\n      }\n      const authToken = await axios(config)\n        .then((result) => {\n          return result?.data['access_token']\n        })\n        ?.catch((err) => {\n          Sentry.captureException(err)\n          return null\n        })\n      return authToken\n    } catch (err) {\n      Sentry.captureException(err)\n      return null\n    }\n  }\n\n  // GENERATES SECURITY CREDENTIALS FOR ENDPOINTS THAT REQUIRE securityCredentials\n  private static generateSecurityCredentials(): string | null {\n    try {\n      const bufferToEncrypt = Buffer.from(configs.mpesa.initiatorPassword, 'utf-8')\n      const data = readFileSync(resolve(this.certPath), 'utf-8')\n      const privateKey = String(data)\n      const encrypted = publicEncrypt(\n        {\n          key: privateKey,\n          padding: constants.RSA_PKCS1_PADDING,\n        },\n        bufferToEncrypt,\n      )\n      return encrypted.toString('base64')\n    } catch (error) {\n      Sentry.captureException(error)\n      return null\n    }\n  }\n\n  // GENERATE MPESA BASE64 KEY\n  private static generateMpesaPassword(): { password: string; timestamp: string } {\n    const timestamp: string = dayjs().format('YYYYMMDDhhmmss').toString()\n    const password: string = btoa(`${configs.mpesa.shortCode}${configs.mpesa.passKey}${timestamp}`)\n    return {\n      timestamp,\n      password,\n    }\n  }\n\n  // FORMAT PHONE NUMBER TO CONFIRM TO MPESA FORMAT\n  private static formatPhoneNumber(phone: string): number {\n    if (phone.startsWith('0')) {\n      phone = phone.replace('0', '254')\n    } else if (phone.startsWith('+')) {\n      phone = phone.substring(1)\n    } else if (phone.startsWith('0110') || phone.startsWith('0111')) {\n      phone = phone.replace('0', '254')\n    } else if (phone.startsWith('7')) {\n      phone = '254' + phone\n    }\n    return parseInt(phone.trim())\n  }\n\n  /**\n   * Intiates an stk push\n   * @param phone Phone Number to deliver the stk push to\n   * @param amount Amount To Initate The Stk Push For\n   * @param 13 letter uniqueIdentifier for this transaction\n   * @returns @IntitateMpesaStkResponse\n   */\n  static async initiateMpesaStkPush({\n    phone,\n    amount,\n    uniqueId,\n    callbackUrl,\n  }: {\n    phone: string\n    amount: number\n    uniqueId: string\n    callbackUrl?: string\n  }): Promise<IntitateMpesaStkResponse> {\n    try {\n      const authToken = await this.authenticate()\n      const authentication = this.generateMpesaPassword()\n      const body = JSON.stringify({\n        BusinessShortCode: Number(configs.mpesa.shortCode),\n        Password: authentication.password,\n        Timestamp: authentication.timestamp,\n        TransactionType: 'CustomerPayBillOnline',\n        Amount: Number(amount),\n        PartyA: this.formatPhoneNumber(phone),\n        PartyB: configs.mpesa.shortCode,\n        PhoneNumber: this.formatPhoneNumber(phone),\n        CallBackURL: `${configs.stkCallbackUrl}${callbackUrl ?? '/api/c2b/stk-callback'}`,\n        AccountReference: 'iFunza',\n        TransactionDesc: uniqueId,\n      })\n\n      const response = await axios\n        .post(`${this.baseUrl}/mpesa/stkpush/v1/processrequest`, body, {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${authToken}`,\n          },\n        })\n        ?.then((resp) => {\n          return resp?.data as StkResponse\n        })\n        ?.catch((err) => {\n          Sentry.captureException(err, {\n            extra: {\n              data: err?.response?.data,\n            },\n          })\n\n          return <StkResponse>{ ResponseCode: '1', CustomerMessage: err?.response?.data?.errorMessage ?? 'Failed! Something went wrong' }\n        })\n      if (response?.ResponseCode == '0') {\n        return {\n          success: true,\n          message: response?.CustomerMessage ?? 'Success! Mpesa initiated',\n          CheckoutRequestID: `${response?.CheckoutRequestID}`,\n          MerchantRequestID: `${response?.MerchantRequestID}`,\n        }\n      } else {\n        return {\n          success: false,\n          message: response?.CustomerMessage ?? 'Failed! Something went wrong please try again',\n        }\n      }\n    } catch (error) {\n      Sentry.captureException(error)\n      return {\n        success: false,\n        message: 'Failed! Could Not Intiate Mpesa Transaction',\n      }\n    }\n  }\n\n  /**\n   * Checks The Status Of an stk push if the transaction was completed successfully\n   *\n   * @param checkoutRequestID Checkout Request ID Of the transaction to check the status\n   */\n  static async checkLipaNaMpesaStatus(checkoutRequestID: string): Promise<MpesaTransactionStatusResponse> {\n    try {\n      const authToken = await this.authenticate()\n      const authentication = this.generateMpesaPassword()\n      const response: MpesaExpressResponse = await axios\n        .post(\n          `${this.baseUrl}/mpesa/stkpushquery/v1/query`,\n          {\n            BusinessShortCode: configs.mpesa.shortCode,\n            Password: authentication.password,\n            Timestamp: authentication.timestamp,\n            CheckoutRequestID: checkoutRequestID,\n          },\n          {\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${authToken}`,\n            },\n          },\n        )\n        ?.then((resp) => {\n          return resp?.data as MpesaTransactionStatus\n        })\n        ?.catch((err) => {\n          Sentry.captureException(err)\n          return <MpesaTransactionStatus>{\n            ResultCode: '1',\n            ResponseCode: '1',\n            ResultDesc: err?.response?.data?.errorMessage ?? 'Failed! Something went wrong',\n          }\n        })\n      if (response?.ResponseCode == '0') {\n        if (response?.ResultCode == '0') {\n          return {\n            stkPushSuccess: true,\n            callbackSuccess: true,\n            CheckoutRequestID: `${response?.CheckoutRequestID}`,\n            MerchantRequestID: `${response?.MerchantRequestID}`,\n            ResponseCode: response?.ResponseCode,\n            ResponseDescription: `${response?.ResponseDescription}`,\n            ResultCode: response?.ResultCode,\n            ResultDesc: `${response?.ResultDesc}`,\n          }\n        } else {\n          return {\n            stkPushSuccess: true,\n            callbackSuccess: false,\n            CheckoutRequestID: response?.CheckoutRequestID,\n            MerchantRequestID: response?.MerchantRequestID,\n            ResponseCode: response?.ResponseCode,\n            ResponseDescription: response?.ResponseDescription,\n            ResultCode: response?.ResultCode,\n            ResultDesc: response?.ResultDesc,\n          }\n        }\n      } else {\n        return {\n          stkPushSuccess: false,\n          callbackSuccess: false,\n          CheckoutRequestID: response?.CheckoutRequestID,\n          MerchantRequestID: response?.MerchantRequestID,\n          ResponseCode: response?.ResponseCode,\n          ResponseDescription: response?.ResponseDescription,\n          ResultCode: response?.ResultCode,\n          ResultDesc: response?.ResultDesc,\n        }\n      }\n    } catch (error) {\n      Sentry.captureException(error)\n      return {\n        stkPushSuccess: false,\n        callbackSuccess: false,\n        ResponseDescription: 'Failed! Could Not Verify Transaction',\n        ResultDesc: 'Failed! Could Not Verify Transaction',\n        CheckoutRequestID: checkoutRequestID,\n        MerchantRequestID: null,\n        ResponseCode: '1032',\n        ResultCode: '1032',\n      }\n    }\n  }\n\n  /**\n   * Make Payouts to a specific paybill or bank account through paybill\n   * @param amount Amount to transfer\n   * @param receiverPaybill Paybill to receive the funds\n   * @param accountName Account Name of the paybill receiving the funds\n   * @returns\n   */\n  static async payoutToPayBill({\n    amount,\n    receiverPaybill,\n    accountName,\n  }: {\n    amount: number\n    receiverPaybill: string\n    accountName: string\n  }): Promise<MpesaB2BResponse> {\n    try {\n      const config = {\n        OriginatorConversationID: uuidv4(),\n        Initiator: configs.mpesa.initiatorName,\n        SecurityCredential: this.generateSecurityCredentials(),\n        CommandID: 'BusinessPayBill',\n        SenderIdentifierType: '4',\n        RecieverIdentifierType: '4',\n        Amount: amount,\n        PartyA: configs.mpesa.shortCode,\n        PartyB: receiverPaybill,\n        AccountReference: accountName,\n        Remarks: 'ok',\n        QueueTimeOutURL: `${configs.stkCallbackUrl}/api/mpesa/paybilltimeout`,\n        ResultURL: `${configs.stkCallbackUrl}/api/mpesa/payouttotaybill`,\n      }\n      const authToken = await this.authenticate()\n\n      const response = await axios\n        .post(`${this.baseUrl}/mpesa/b2b/v1/paymentrequest`, config, {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${authToken}`,\n          },\n        })\n        ?.then((resp) => resp?.data as MpesaB2BResponse)\n        ?.catch((err) => {\n          Sentry.captureException(err)\n          return <MpesaB2BResponse>{\n            ConversationID: null,\n            ResponseCode: '1',\n            ResponseDescription: err?.response?.data?.errorMessage ?? 'Failed! Something went wrong',\n          }\n        })\n      return response\n    } catch (error) {\n      Sentry.captureException(error)\n      return {\n        ConversationID: null,\n        ResponseCode: '1',\n        OriginatorConversationID: null,\n        ResponseDescription: 'Failed! Something went wrong',\n      }\n    }\n  }\n\n  /**\n   * Make Payouts to user buygoods account.\n   * @param param0\n   * @returns\n   */\n  static async payoutToBuyGoods({ amount, receiverBuyGoods }: { amount: number; receiverBuyGoods: string }): Promise<MpesaB2BResponse> {\n    try {\n      const data = {\n        OriginatorConversationID: uuidv4(),\n        Initiator: configs.mpesa.initiatorName,\n        SecurityCredential: this.generateSecurityCredentials(),\n        CommandID: 'BusinessBuyGoods',\n        SenderIdentifierType: '4',\n        RecieverIdentifierType: '4',\n        Amount: amount,\n        PartyA: configs.mpesa.shortCode,\n        PartyB: receiverBuyGoods,\n        Remarks: 'ok',\n        QueueTimeOutURL: `${configs.stkCallbackUrl}/api/mpesa/buygoodstimeout`,\n        ResultURL: `${configs.stkCallbackUrl}/api/mpesa/payoutbuygoods`,\n      }\n      const authToken = await this.authenticate()\n\n      const response = await axios\n        .post(`${this.baseUrl}/mpesa/b2b/v1/paymentrequest`, data, {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${authToken}`,\n          },\n        })\n        ?.then((resp) => resp?.data as MpesaB2BResponse)\n        ?.catch((err) => {\n          Sentry.captureException(err, {\n            extra: {\n              data: err?.response?.data,\n            },\n          })\n          return <MpesaB2BResponse>{\n            ConversationID: null,\n            ResponseCode: '1',\n            ResponseDescription: err?.response?.data?.errorMessage ?? 'Error! Something went wrong please try again',\n          }\n        })\n      return response\n    } catch (error) {\n      Sentry.captureException(error)\n      return {\n        ConversationID: null,\n        ResponseCode: '1',\n        OriginatorConversationID: null,\n        ResponseDescription: 'Failed! Something went wrong',\n      }\n    }\n  }\n\n  static async payoutToMobileNumber({\n    phone,\n    amount,\n    reference,\n    remarks,\n  }: {\n    phone: string\n    amount: number\n    reference?: string\n    remarks?: string\n  }): Promise<MpesaB2BResponse> {\n    try {\n      const authentication = await this.authenticate()\n      const body = {\n        OriginatorConversationID: reference ?? uuidv4(),\n        InitiatorName: configs.mpesa.initiatorName,\n        SecurityCredential: this.generateSecurityCredentials(),\n        CommandID: 'BusinessPayment',\n        Amount: amount,\n        PartyA: configs.mpesa.shortCode,\n        PartyB: this.formatPhoneNumber(phone),\n        Remarks: remarks ?? 'Test remarks',\n        QueueTimeOutURL: `${configs.stkCallbackUrl}/api/mpesa/mobiletimeout`,\n        ResultURL: `${configs.stkCallbackUrl}/api/mpesa/mobileResult`,\n        occasion: 'null',\n      }\n      const response = await axios\n        .post(`${this.baseUrl}/mpesa/b2c/v3/paymentrequest`, body, {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${authentication}`,\n          },\n        })\n        ?.then((resp) => resp?.data as MpesaB2BResponse)\n        .catch((err) => {\n          Sentry.captureException(err, {\n            extra: {\n              response: err?.response?.data,\n            },\n          })\n          return <MpesaB2BResponse>{\n            ConversationID: null,\n            OriginatorConversationID: null,\n            ResponseCode: '1',\n            ResponseDescription: err?.response?.data?.errorMessage ?? 'Failed! Something went wrong please try again',\n          }\n        })\n      return response\n    } catch (error) {\n      Sentry.captureException(error)\n      return {\n        ConversationID: null,\n        OriginatorConversationID: null,\n        ResponseCode: '1',\n        ResponseDescription: 'Failed! Something went wrong please try again',\n      }\n    }\n  }\n}\nexport default MpesaLibrary\n"]}