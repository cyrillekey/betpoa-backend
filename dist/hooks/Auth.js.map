{"version":3,"file":"Auth.js","sourceRoot":"/","sources":["hooks/Auth.ts"],"names":[],"mappings":";;;AAGO,KAAK,UAAU,YAAY,CAAC,GAAmB,EAAE,GAAiB;IACvE,IAAI,CAAC;QACH,MAAM,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,CAAA;QAEtC,IAAI,CAAC,IAAI,EAAE,CAAC;YACV,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,EAAE,EAAE,IAAI;gBACR,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,gBAAgB;aAC1B,CAAC,CAAA;QACJ,CAAC;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAA;QACzE,MAAM,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;QACpD,IAAI,CAAC,OAAO;YACV,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,EAAE,EAAE,IAAI;gBACR,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,gBAAgB;aAC1B,CAAC,CAAA;QACJ,IAAI,OAAO,EAAE,CAAC;YACZ,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;gBACnD,KAAK,EAAE;oBACL,EAAE,EAAE,OAAO,EAAE,EAAE;iBAChB;aACF,CAAC,CAAA;YACF,IAAI,CAAC,IAAI,EAAE,CAAC;gBACV,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBAC1B,EAAE,EAAE,IAAI;oBACR,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,gBAAgB;iBAC1B,CAAC,CAAA;YACJ,CAAC;YACD,IAAI,IAAI;gBAAE,GAAG,CAAC,IAAI,GAAG,IAAI,CAAA;YACzB,OAAO,IAAI,CAAA;QACb,CAAC;QAED,OAAO,KAAK,CAAA;IACd,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;QACzC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YAC1B,EAAE,EAAE,IAAI;YACR,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,gBAAgB;SAC1B,CAAC,CAAA;IACJ,CAAC;AACH,CAAC;AA7CD,oCA6CC;AACM,KAAK,UAAU,OAAO,CAAC,GAAmB,EAAE,GAAiB;IAClE,IAAI,CAAC;QACH,MAAM,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,CAAA;QAEtC,IAAI,CAAC,IAAI,EAAE,CAAC;YACV,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,EAAE,EAAE,IAAI;gBACR,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,gBAAgB;aAC1B,CAAC,CAAA;QACJ,CAAC;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAA;QACzE,MAAM,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;QACpD,IAAI,CAAC,OAAO;YACV,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,EAAE,EAAE,IAAI;gBACR,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,gBAAgB;aAC1B,CAAC,CAAA;QACJ,IAAI,OAAO,EAAE,CAAC;YACZ,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;gBACnD,KAAK,EAAE;oBACL,EAAE,EAAE,OAAO,EAAE,EAAE;iBAChB;aACF,CAAC,CAAA;YACF,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,OAAO,EAAE,CAAC;gBAClC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBAC1B,EAAE,EAAE,IAAI;oBACR,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,gBAAgB;iBAC1B,CAAC,CAAA;YACJ,CAAC;YAED,IAAI,IAAI;gBAAE,GAAG,CAAC,IAAI,GAAG,IAAI,CAAA;YACzB,OAAO,IAAI,CAAA;QACb,CAAC;QAED,OAAO,KAAK,CAAA;IACd,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;QACzC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YAC1B,EAAE,EAAE,IAAI;YACR,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,gBAAgB;SAC1B,CAAC,CAAA;IACJ,CAAC;AACH,CAAC;AA9CD,0BA8CC","sourcesContent":["import { User } from '@prisma/client'\nimport { FastifyReply, FastifyRequest } from 'fastify'\n\nexport async function isAuthorized(req: FastifyRequest, res: FastifyReply) {\n  try {\n    const auth = req.headers.authorization\n\n    if (!auth) {\n      return res.status(401).send({\n        id: null,\n        success: false,\n        message: 'Not Authorized',\n      })\n    }\n    const token = auth.split(' ')[0] === 'Bearer' ? auth.split(' ')[1] : auth\n    const userJwt = req.server.helpers.jwt.verify(token)\n    if (!userJwt)\n      return res.status(401).send({\n        id: null,\n        success: false,\n        message: 'Not Authorized',\n      })\n    if (userJwt) {\n      const user = await req.server.prisma.user.findUnique({\n        where: {\n          id: userJwt?.id,\n        },\n      })\n      if (!user) {\n        return res.status(401).send({\n          id: null,\n          success: false,\n          message: 'Not Authorized',\n        })\n      }\n      if (user) req.user = user\n      return true\n    }\n\n    return false\n  } catch (error) {\n    req.server.Sentry.captureException(error)\n    return res.status(401).send({\n      id: null,\n      success: false,\n      message: 'Not Authorized',\n    })\n  }\n}\nexport async function isAdmin(req: FastifyRequest, res: FastifyReply) {\n  try {\n    const auth = req.headers.authorization\n\n    if (!auth) {\n      return res.status(401).send({\n        id: null,\n        success: false,\n        message: 'Not Authorized',\n      })\n    }\n    const token = auth.split(' ')[0] === 'Bearer' ? auth.split(' ')[1] : auth\n    const userJwt = req.server.helpers.jwt.verify(token)\n    if (!userJwt)\n      return res.status(401).send({\n        id: null,\n        success: false,\n        message: 'Not Authorized',\n      })\n    if (userJwt) {\n      const user = await req.server.prisma.user.findUnique({\n        where: {\n          id: userJwt?.id,\n        },\n      })\n      if (!user || user.role != 'ADMIN') {\n        return res.status(401).send({\n          id: null,\n          success: false,\n          message: 'Not Authorized',\n        })\n      }\n\n      if (user) req.user = user\n      return true\n    }\n\n    return false\n  } catch (error) {\n    req.server.Sentry.captureException(error)\n    return res.status(401).send({\n      id: null,\n      success: false,\n      message: 'Not Authorized',\n    })\n  }\n}\n\ndeclare module 'fastify' {\n  export interface FastifyRequest {\n    user: User\n  }\n}\n"]}