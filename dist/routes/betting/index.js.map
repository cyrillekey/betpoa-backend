{"version":3,"file":"index.js","sourceRoot":"/","sources":["routes/betting/index.ts"],"names":[],"mappings":"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","sourcesContent":["import BettingController from '@controllers/BettingController'\nimport { BetMarketOddsReponse, BetResponseBody, ErrorResponses, IPlaceBetInput, ISuccessResponse } from '@controllers/interface/response'\nimport { isAuthorized } from '@hooks/Auth'\nimport { BETSTATUS } from '@prisma/client'\nimport { FastifyPluginAsync } from 'fastify'\n\nconst bettingRoute: FastifyPluginAsync = async (fastify): Promise<void> => {\n  fastify.route({\n    method: 'POST',\n    url: '/',\n    preHandler: isAuthorized,\n    schema: {\n      summary: 'Place Bet',\n      description: 'Customer place bet for the currently logged in user',\n      tags: ['Bet'],\n      security: [{ bearerAuth: [] }],\n      body: {\n        type: 'object',\n        required: ['data', 'amount'],\n        properties: {\n          amount: { type: 'number' },\n          data: {\n            type: 'array',\n\n            items: { properties: IPlaceBetInput, type: 'object', required: ['fixtureId', 'oddsId', 'pick'] },\n          },\n        },\n      },\n      response: {\n        200: {\n          type: 'object',\n          description: 'SuccessReponse',\n          properties: ISuccessResponse,\n        },\n        default: {\n          type: 'object',\n          description: 'SuccessReponse',\n          properties: ISuccessResponse,\n        },\n        ...ErrorResponses,\n      },\n    },\n    handler: async (req, res) => await new BettingController(fastify, req, res).placeBet(),\n  })\n  fastify.route({\n    method: 'DELETE',\n    url: '/:id',\n    preHandler: isAuthorized,\n    schema: {\n      summary: 'Cancel Bet',\n      description: 'Cancel customer placed bet if bet is within the allowed cancellation window for the currently logged in user',\n      tags: ['Bet'],\n      params: {\n        id: { type: 'number' },\n      },\n      response: {\n        200: {\n          type: 'object',\n          description: 'SuccessReponse',\n          properties: ISuccessResponse,\n        },\n        default: {\n          type: 'object',\n          description: 'SuccessReponse',\n          properties: ISuccessResponse,\n        },\n        ...ErrorResponses,\n      },\n    },\n    handler: async (req, res) => await new BettingController(fastify, req, res).cancelBet(),\n  })\n  fastify.route({\n    method: 'GET',\n    url: '/',\n    preHandler: isAuthorized,\n    schema: {\n      summary: 'Customer bets',\n      description: 'Get all placed bet for the currently logged in user',\n      tags: ['Bet'],\n      querystring: {\n        from: { type: 'string' },\n        to: { type: 'string' },\n        status: { type: 'array', items: { type: 'string', enum: ['WON', 'LOST', 'VOID', 'PENDING', 'CANCELLED'] satisfies BETSTATUS[] } },\n      },\n      security: [{ bearerAuth: [] }],\n      response: {\n        200: {\n          type: 'object',\n          description: 'SuccessReponse',\n          properties: { ...ISuccessResponse, data: { type: 'array', items: { type: 'object', properties: BetResponseBody } } },\n        },\n        default: {\n          type: 'object',\n          description: 'SuccessReponse',\n          properties: { ...ISuccessResponse, data: { type: 'array', items: { type: 'object', properties: BetResponseBody } } },\n        },\n        ...ErrorResponses,\n      },\n    },\n    handler: async (req, res) => await new BettingController(fastify, req, res).getGets(),\n  })\n  fastify.route({\n    method: 'GET',\n    url: '/:id',\n    preHandler: isAuthorized,\n    schema: {\n      summary: 'Customer single bet',\n      description: 'Get single customer bet by bet id',\n      tags: ['Bet'],\n      params: {\n        id: { type: 'number' },\n      },\n      security: [{ bearerAuth: [] }],\n      response: {\n        200: {\n          type: 'object',\n          description: 'SuccessReponse',\n          properties: { ...ISuccessResponse, data: { type: 'object', properties: BetResponseBody } },\n        },\n        default: {\n          type: 'object',\n          description: 'SuccessReponse',\n          properties: { ...ISuccessResponse, data: { type: 'object', properties: BetResponseBody } },\n        },\n        ...ErrorResponses,\n      },\n    },\n    handler: async (req, res) => await new BettingController(fastify, req, res).getBet(),\n  })\n  fastify.route({\n    method: 'GET',\n    url: '/:id/items',\n    preHandler: isAuthorized,\n    schema: {\n      tags: ['Bet'],\n      summary: 'Bet Items',\n      description: 'Get all items in a placed bet',\n      security: [{ bearerAuth: [] }],\n      params: {\n        id: { type: 'number' },\n      },\n      response: {\n        200: {\n          type: 'object',\n          description: 'SuccessReponse',\n          properties: { ...ISuccessResponse, data: { type: 'array', items: { type: 'object', properties: BetMarketOddsReponse } } },\n        },\n        default: {\n          type: 'object',\n          description: 'SuccessReponse',\n          properties: { ...ISuccessResponse, data: { type: 'array', items: { type: 'object', properties: BetMarketOddsReponse } } },\n        },\n        ...ErrorResponses,\n      },\n    },\n    handler: async (req, res) => await new BettingController(fastify, req, res).getBetItems(),\n  })\n}\nexport default bettingRoute\n"]}