{"version":3,"file":"index.js","sourceRoot":"/","sources":["routes/user/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { configs } from '@configs/index'\nimport { IDefaultResponse } from '@controllers/interface/fixtures'\nimport { ErrorResponses } from '@controllers/interface/response'\nimport { ISignUpBody, IValidateOptBody } from '@controllers/interface/user'\nimport { UserController } from '@controllers/UserController'\nimport { isAuthorized } from '@hooks/Auth'\nimport { FastifyPluginAsync } from 'fastify'\n\nconst userRoutes: FastifyPluginAsync = async (fastify, _opts): Promise<void> => {\n  fastify.route<{\n    Body: ISignUpBody\n  }>({\n    method: 'POST',\n    url: '/signup',\n    schema: {\n      description: `Signup User to ${configs.appname}`,\n      tags: ['Auth'],\n      summary: 'Signup user',\n      body: {\n        type: 'object',\n        required: ['phone', 'password'],\n        properties: {\n          phone: { type: 'string' },\n          password: { type: 'string' },\n        },\n      },\n      response: {\n        201: {\n          description: 'Successful response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n            token: { type: 'string' },\n            user: {\n              type: 'object',\n              properties: {\n                id: { type: 'number' },\n                phone: { type: 'string' },\n                phoneValidated: { type: 'boolean' },\n                profileId: { type: 'number' },\n                role: { type: 'string' },\n              },\n            },\n          },\n        },\n        default: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n          },\n        },\n        ...ErrorResponses,\n      },\n    },\n    handler: async (req, res) => {\n      await new UserController(fastify, req, res).signupCustomer()\n    },\n  })\n  fastify.route({\n    method: 'POST',\n    url: '/login',\n    schema: {\n      description: `Login to ${configs.appname}`,\n      summary: 'Login',\n      tags: ['Auth'],\n      body: {\n        type: 'object',\n        required: ['phone', 'password'],\n        properties: {\n          phone: { type: 'string' },\n          password: { type: 'string' },\n        },\n      },\n      response: {\n        200: {\n          description: 'Successful response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n            token: { type: 'string' },\n            user: {\n              type: 'object',\n              properties: {\n                id: { type: 'number' },\n                phone: { type: 'string' },\n                phoneValidated: { type: 'boolean' },\n                profileId: { type: 'number' },\n                role: { type: 'string' },\n              },\n            },\n          },\n        },\n        default: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n          },\n        },\n        ...ErrorResponses,\n      },\n    },\n    handler: async (req, res) => {\n      await new UserController(fastify, req, res).loginUser()\n    },\n  })\n  fastify.route({\n    method: 'POST',\n    url: '/otp',\n    preHandler: isAuthorized,\n\n    schema: {\n      description: `Request Otp for phone verification`,\n      summary: 'Request Phone Otp',\n      tags: ['Auth'],\n      security: [{ bearerAuth: [] }],\n      response: {\n        default: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n          },\n        },\n        200: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n          },\n        },\n        ...ErrorResponses,\n      },\n    },\n    handler: async (req, res) => new UserController(fastify, req, res).requestPhoneOtp(),\n  })\n  fastify.route<{ Body: IValidateOptBody; Response: IDefaultResponse }>({\n    method: 'POST',\n    url: '/verifyUser',\n    preHandler: isAuthorized,\n    schema: {\n      description: 'Verify user phone belongs to user using otp sent to phone',\n      summary: 'Verify User Phone',\n      tags: ['Auth'],\n      body: {\n        type: 'object',\n        required: ['otp'],\n        properties: {\n          otp: { type: 'string' },\n        },\n      },\n      response: {\n        default: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n          },\n        },\n        200: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n          },\n        },\n        ...ErrorResponses,\n      },\n      security: [{ bearerAuth: [] }],\n    },\n    handler: async (req, res) => new UserController(fastify, req, res).validateOtp(),\n  })\n  fastify.route({\n    method: 'POST',\n    url: '/passwordreset',\n    schema: {\n      description: 'Initiate password reset to get otp to phone',\n      summary: 'Initiate Password Reset',\n      tags: ['Auth'],\n      body: {\n        type: 'object',\n        required: ['phone'],\n        properties: {\n          phone: { type: 'string' },\n        },\n      },\n      response: {\n        default: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n          },\n        },\n        200: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n          },\n        },\n        ...ErrorResponses,\n      },\n    },\n    handler: async (req, res) => new UserController(fastify, req, res).requestPasswordReset(),\n  })\n  fastify.route({\n    method: 'PUT',\n    url: '/',\n    preHandler: isAuthorized,\n    schema: {\n      description: 'Updates an authenticated  betpoa user profile',\n      summary: 'Update User',\n      tags: ['User'],\n      security: [{ bearerAuth: [] }],\n\n      body: {\n        type: 'object',\n        properties: {\n          fname: { type: 'string' },\n          lname: { type: 'string' },\n          email: { type: 'string' },\n          avatar: { type: 'object', properties: { link: { type: 'string' }, filename: { type: 'string' }, fileType: { type: 'string' } } },\n        },\n      },\n      response: {\n        default: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n          },\n        },\n        200: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n          },\n        },\n        ...ErrorResponses,\n      },\n    },\n    handler: async (req, res) => new UserController(fastify, req, res).updateUser(),\n  })\n  fastify.route({\n    method: 'PUT',\n    url: 'passwordupdate',\n    schema: {\n      summary: 'Update User Password',\n      description: 'Update user password given password reset token',\n      tags: ['Auth', 'User'],\n      body: {\n        type: 'object',\n        required: ['otp', 'password', 'phone'],\n        properties: {\n          otp: { type: 'string', description: 'Password reset otp' },\n          password: { type: 'string', description: 'New Password' },\n          phone: { type: 'string', description: 'User Phone Number' },\n        },\n      },\n      response: {\n        default: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n          },\n        },\n        200: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n          },\n        },\n        ...ErrorResponses,\n      },\n    },\n    handler: async (req, res) => new UserController(fastify, req, res).updateUserPassword(),\n  })\n  fastify.route({\n    method: 'POST',\n    url: '/deposit',\n    preHandler: isAuthorized,\n    schema: {\n      tags: ['User'],\n      summary: 'Mpesa deposit',\n      description: 'Customer make mpesa deposit',\n      security: [{ bearerAuth: [] }],\n      response: {\n        default: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n          },\n        },\n        200: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n          },\n        },\n        ...ErrorResponses,\n      },\n\n      body: {\n        type: 'object',\n        required: ['phone', 'amount'],\n        properties: {\n          phone: { type: 'string', description: 'Mpesa phone number to deposit from' },\n          amount: { type: 'number', description: 'Amount to deposit. Must be greater than 10' },\n        },\n      },\n    },\n    handler: async (req, res) => await new UserController(fastify, req, res).userMpesaDeposit(),\n  })\n  fastify.route({\n    method: 'POST',\n    url: '/withdrawal',\n    preHandler: isAuthorized,\n    schema: {\n      tags: ['User'],\n      summary: 'Mpesa withdrawal',\n      description: 'Customer make mpesa withdrawal',\n      security: [{ bearerAuth: [] }],\n      response: {\n        200: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n          },\n        },\n        default: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n          },\n        },\n        ...ErrorResponses,\n      },\n      body: {\n        type: 'object',\n        required: ['amount'],\n        properties: {\n          amount: { type: 'number' },\n        },\n      },\n    },\n    handler: async (req, res) => await new UserController(fastify, req, res).userMpesaDeposit(),\n  })\n}\n\nexport default userRoutes\n"]}