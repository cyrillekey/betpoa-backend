{"version":3,"file":"index.js","sourceRoot":"/","sources":["routes/leagues/index.ts"],"names":[],"mappings":";;;;;AAAA,8DAAqF;AACrF,qFAA4D;AAC5D,sCAA0C;AAG1C,MAAM,cAAc,GAAuB,KAAK,EAAE,OAAO,EAAE,KAAK,EAAiB,EAAE;IACjF,OAAO,CAAC,KAAK,CAAC;QACZ,GAAG,EAAE,GAAG;QACR,MAAM,EAAE,KAAK;QACb,MAAM,EAAE;YACN,OAAO,EAAE,aAAa;YACtB,WAAW,EAAE,wBAAwB;YACrC,IAAI,EAAE,CAAC,QAAQ,CAAC;YAChB,WAAW,EAAE;gBACX,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;gBAC5B,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;gBACxB,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;gBACxB,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;gBAC3B,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;aAC9B;YACD,QAAQ,EAAE;gBACR,OAAO,EAAE;oBACP,WAAW,EAAE,kBAAkB;oBAC/B,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;wBACtB,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;wBAC5B,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;wBAC3B,IAAI,EAAE;4BACJ,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,UAAU,EAAE,8BAAmB;6BAChC;yBACF;qBACF;iBACF;gBACD,GAAG,EAAE;oBACH,WAAW,EAAE,kBAAkB;oBAC/B,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;wBACtB,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;wBAC5B,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;wBAC3B,IAAI,EAAE;4BACJ,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,UAAU,EAAE,8BAAmB;6BAChC;yBACF;qBACF;iBACF;gBACD,GAAG,yBAAc;aAClB;SACF;QAED,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,MAAM,IAAI,0BAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,aAAa,EAAE;KAC3F,CAAC,CAAA;IACF,OAAO,CAAC,KAAK,CAAC;QACZ,GAAG,EAAE,MAAM;QACX,MAAM,EAAE,KAAK;QACb,MAAM,EAAE;YACN,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC;YAC9B,WAAW,EAAE,gCAAgC;YAC7C,IAAI,EAAE,CAAC,QAAQ,CAAC;YAChB,OAAO,EAAE,YAAY;YACrB,MAAM,EAAE;gBACN,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;aACvB;YACD,QAAQ,EAAE;gBACR,GAAG,EAAE;oBACH,WAAW,EAAE,kBAAkB;oBAC/B,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;wBACtB,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;wBAC5B,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;wBAC3B,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,UAAU,EAAE,8BAAmB;yBAChC;qBACF;iBACF;gBACD,OAAO,EAAE;oBACP,WAAW,EAAE,kBAAkB;oBAC/B,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;wBACtB,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;wBAC5B,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;wBAC3B,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,UAAU,EAAE,8BAAmB;yBAChC;qBACF;iBACF;gBACD,GAAG,yBAAc;aAClB;SACF;QACD,UAAU,EAAE,mBAAY;QACxB,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,MAAM,IAAI,0BAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,SAAS,EAAE;KACvF,CAAC,CAAA;AACJ,CAAC,CAAA;AACD,kBAAe,cAAc,CAAA","sourcesContent":["import { ErrorResponses, ILeagueResponseBody } from '@controllers/interface/response'\nimport LeagueController from '@controllers/LeagueController'\nimport { isAuthorized } from '@hooks/Auth'\nimport { FastifyPluginAsync } from 'fastify'\n\nconst leaguesQueries: FastifyPluginAsync = async (fastify, _opts): Promise<void> => {\n  fastify.route({\n    url: '/',\n    method: 'GET',\n    schema: {\n      summary: 'Get Leagues',\n      description: 'Get all active leagues',\n      tags: ['League'],\n      querystring: {\n        pageSize: { type: 'number' },\n        page: { type: 'number' },\n        year: { type: 'string' },\n        country: { type: 'string' },\n        featured: { type: 'boolean' },\n      },\n      response: {\n        default: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n            data: {\n              type: 'array',\n              items: {\n                properties: ILeagueResponseBody,\n              },\n            },\n          },\n        },\n        200: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n            data: {\n              type: 'array',\n              items: {\n                properties: ILeagueResponseBody,\n              },\n            },\n          },\n        },\n        ...ErrorResponses,\n      },\n    },\n\n    handler: async (req, res) => await new LeagueController(fastify, req, res).getAllLeagues(),\n  })\n  fastify.route({\n    url: '/:id',\n    method: 'GET',\n    schema: {\n      security: [{ bearerAuth: [] }],\n      description: 'Get Single League by league id',\n      tags: ['League'],\n      summary: 'Get League',\n      params: {\n        id: { type: 'number' },\n      },\n      response: {\n        200: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n            data: {\n              type: 'object',\n              properties: ILeagueResponseBody,\n            },\n          },\n        },\n        default: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n            data: {\n              type: 'object',\n              properties: ILeagueResponseBody,\n            },\n          },\n        },\n        ...ErrorResponses,\n      },\n    },\n    preHandler: isAuthorized,\n    handler: async (req, res) => await new LeagueController(fastify, req, res).getleague(),\n  })\n}\nexport default leaguesQueries\n"]}