{"version":3,"file":"index.js","sourceRoot":"/","sources":["routes/fixtures/index.ts"],"names":[],"mappings":"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","sourcesContent":["import FixturesController from '@controllers/FixturesController'\nimport { ErrorResponses, FixtureResponse, IFixtureResults, IOdds } from '@controllers/interface/response'\nimport { FastifyPluginAsync } from 'fastify'\n\nconst fixturesQueries: FastifyPluginAsync = async (fastify, _opts): Promise<void> => {\n  fastify.get(\n    '/',\n    {\n      schema: {\n        summary: 'Get all fixtures',\n        tags: ['Fixture'],\n        description: 'Get all fixtures',\n        response: {\n          200: {\n            type: 'object',\n            properties: {\n              id: { type: 'number' },\n              success: { type: 'boolean' },\n              message: { type: 'string' },\n              data: {\n                type: 'array',\n                items: {\n                  properties: FixtureResponse,\n                },\n              },\n            },\n          },\n          default: {\n            type: 'object',\n            properties: {\n              id: { type: 'number' },\n              success: { type: 'boolean' },\n              message: { type: 'string' },\n              data: {\n                type: 'array',\n                items: {\n                  properties: FixtureResponse,\n                },\n              },\n            },\n          },\n          ...ErrorResponses,\n        },\n        querystring: {\n          fromDate: { type: 'string' },\n          toDate: { type: 'string' },\n          pageSize: { type: 'number' },\n          page: { type: 'number' },\n          leagueIds: { type: 'string', description: 'League ids separated by dash. E.g 1-2-3-4' },\n          country: { type: 'string' },\n          teamsId: { type: 'string', description: 'Team ids separated by dash. E.g 1-2-3-4' },\n          status: { type: 'string', enum: ['FINISHED', 'UPCOMMING', 'ABANDONED', 'INPLAY', 'CANCELLED'] },\n        },\n      },\n    },\n    async (request, reply) => {\n      return await new FixturesController(fastify, request, reply).getAllFixtures()\n    },\n  )\n  fastify.get(\n    '/betting',\n    {\n      schema: {\n        summary: 'Get all fixtures for betting',\n        tags: ['Fixture'],\n        description: 'Betting Fixtures',\n        response: {\n          default: {\n            type: 'object',\n            properties: {\n              id: { type: 'number' },\n              success: { type: 'boolean' },\n              message: { type: 'string' },\n              data: {\n                type: 'array',\n                items: {\n                  properties: FixtureResponse,\n                },\n              },\n            },\n          },\n          200: {\n            type: 'object',\n            properties: {\n              id: { type: 'number' },\n              success: { type: 'boolean' },\n              message: { type: 'string' },\n              data: {\n                type: 'array',\n                items: {\n                  properties: FixtureResponse,\n                },\n              },\n            },\n          },\n          ...ErrorResponses,\n        },\n        querystring: {\n          fromDate: { type: 'string' },\n          toDate: { type: 'string' },\n          pageSize: { type: 'number' },\n          page: { type: 'number' },\n          leagueIds: { type: 'string', description: 'League ids separated by dash. E.g 1-2-3-4' },\n          country: { type: 'string' },\n          teamsId: { type: 'string', description: 'Team ids separated by dash. E.g 1-2-3-4' },\n          status: { type: 'string', enum: ['FINISHED', 'UPCOMMING', 'ABANDONED', 'INPLAY', 'CANCELLED'] },\n        },\n      },\n    },\n    async (request, reply) => {\n      return await new FixturesController(fastify, request, reply).getAllBettingFixtures()\n    },\n  )\n  fastify.route({\n    method: 'GET',\n    url: '/:id',\n\n    handler: (req, res) => new FixturesController(fastify, req, res).getFixtureById(),\n    schema: {\n      summary: 'Get fixture by Id',\n      tags: ['Fixture'],\n      description: 'Get Fixture by fixture id as well as teams,leagues and all associated odds',\n      params: {\n        id: { type: 'number' },\n      },\n      response: {\n        default: {\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n            data: {\n              type: 'object',\n              properties: FixtureResponse,\n            },\n          },\n        },\n        200: {\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n            data: {\n              type: 'object',\n              properties: FixtureResponse,\n            },\n          },\n        },\n        ...ErrorResponses,\n      },\n    },\n  })\n  fastify.route({\n    method: 'GET',\n    url: '/result/:id',\n    schema: {\n      tags: ['Fixture'],\n      summary: 'Get fixture results',\n      description: 'Get Fixture results by fixtureId',\n      params: {\n        id: { type: 'number', description: 'Fixture id' },\n      },\n      response: {\n        default: {\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n            data: {\n              type: 'object',\n              properties: IFixtureResults,\n            },\n          },\n        },\n        200: {\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n            data: {\n              type: 'object',\n              properties: IFixtureResults,\n            },\n          },\n        },\n        ...ErrorResponses,\n      },\n    },\n    handler: async (req, res) => new FixturesController(fastify, req, res).getFixtureResultByFixtureId(),\n  })\n  fastify.route({\n    method: 'GET',\n    url: '/odds/:id',\n    schema: {\n      tags: ['Fixture'],\n      security: [{ bearerAuth: [] }],\n      summary: 'Get fixture odds',\n      description: 'Get odds for a specific fixture by fixture id',\n      params: {\n        id: { type: 'number', description: 'fixture id' },\n      },\n      response: {\n        default: {\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n            data: {\n              type: 'array',\n              items: { properties: IOdds },\n            },\n          },\n        },\n        200: {\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n            data: {\n              type: 'array',\n              items: { properties: IOdds },\n            },\n          },\n        },\n        ...ErrorResponses,\n      },\n    },\n    handler: async (req, res) => new FixturesController(fastify, req, res).getFixtureoddsById(),\n  })\n  fastify.route({\n    method: 'GET',\n    url: '/featured',\n    schema: {\n      tags: ['Fixture'],\n      summary: 'Featured Match',\n      description: 'Get a featured match with odds from a featured league that is upcoming',\n      response: {\n        default: {\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n            data: {\n              type: 'object',\n              properties: FixtureResponse,\n            },\n          },\n        },\n        200: {\n          type: 'object',\n          properties: {\n            id: { type: 'number' },\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n            data: {\n              type: 'object',\n              properties: FixtureResponse,\n            },\n          },\n        },\n        ...ErrorResponses,\n      },\n    },\n    handler: async (req, res) => new FixturesController(fastify, req, res).getFeaturedMatch(),\n  })\n}\n\nexport default fixturesQueries\n"]}